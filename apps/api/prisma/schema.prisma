// Local dev: SQLite; can switch to Postgres later without major changes
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      String
  createdAt DateTime @default(now())

  // Relationships
  teamMembers TeamMember[]
  managers     UserManager[] @relation("UserManagers")
  directs      UserManager[] @relation("UserDirects")
}

model Team {
  id               String   @id @default(cuid())
  name             String
  autoAssignClients Boolean  @default(false)
  createdAt        DateTime @default(now())

  members   TeamMember[]
  resources TeamResource[]
}

model Resource {
  id        String   @id @default(cuid())
  name      String
  type      String
  segment   String
  createdAt DateTime @default(now())

  teamLinks TeamResource[]
}

model UserManager {
  id          String   @id @default(cuid())
  userId      String
  managerId   String
  managerType String
  createdAt   DateTime @default(now())

  user    User @relation("UserDirects", fields: [userId], references: [id])
  manager User @relation("UserManagers", fields: [managerId], references: [id])

  @@unique([userId, managerId, managerType])
}

model TeamMember {
  id         String   @id @default(cuid())
  teamId     String
  userId     String
  accessType String
  grantedVia String?
  joinedAt   DateTime @default(now())

  team Team @relation(fields: [teamId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([teamId, userId])
}

model TeamResource {
  id         String   @id @default(cuid())
  teamId     String
  resourceId String
  assignedAt DateTime @default(now())

  team     Team     @relation(fields: [teamId], references: [id])
  resource Resource @relation(fields: [resourceId], references: [id])

  @@unique([teamId, resourceId])
}


